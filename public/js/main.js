// imports will always go at the top
import ChatMsg from './components/ChatMessage.js';

const socket = io();

const { createApp } = Vue

const vm = createApp({
    data() {
        return {
            socketID: '',
            message: '',
            messages: [],
            nickname: '',
            notification: ''
        }
    },

    methods: {
        dispatchMessage() {
            socket.emit('chat_message', {
                content: this.message,
                name: this.nickname || 'anonymous',
                id: this.socketID
            })

            this.message = "";
            this.notification = "Sent!";
        },

        catchTextFocus() {
            // emit a custom typing event and broadcast it to the server
            socket.emit('user_typing', {
                name: this.nickname || 'anonymous'
            })
        },

        vanishMessage() {
            //document.querySelector('#noti').style.display = 'none'
        }
    },

    components: {
        newmsg: ChatMsg
    }
}).mount('#app')

// the vm variable is our Vue application instance
// utility functions for socket
function setUserID({ sID, message }) {
    // save our unique ID generated by Socket on the server side - this is how we track individual connections to the chat service
    vm.socketID = sID;
    console.log(`user ${sID} message: ${message}`)
}

function showNewMessage({ message }) {
    vm.messages.push(message);

    scroll();
}

function handleUserTyping(user) {
    console.log('somebody is typing something');
    //document.querySelector('#noti').style.display = 'block'



    if (vm.nickname !== user.currentlytyping.name) {
        vm.notification = `${user.currentlytyping.name} is typing...`
    }

    // ways to make the message disappear
    // 1. listen for the blur event from the textarea
    // 2. setTimeou

    // The input will lose focus after 3 seconds

}


socket.addEventListener('connected', setUserID);
socket.addEventListener('new_message', showNewMessage);
socket.addEventListener('typing', handleUserTyping);



function scroll () {
    let element = document.querySelector('.messages');
    element.scrollTop = element.scrollHeight;
}
